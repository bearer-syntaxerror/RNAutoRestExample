"use strict";
/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const msRest = require("@azure/ms-rest-js");
const Mappers = require("../models/geocacheLogsMappers");
/** Class representing a GeocacheLogs. */
class GeocacheLogs {
    /**
     * Create a GeocacheLogs.
     * @param {AdventuresApiClientContext} client Reference to the service client.
     */
    constructor(client) {
        this.client = client;
    }
    archive(id, options, callback) {
        return this.client.sendOperationRequest({
            id,
            options
        }, archiveOperationSpec, callback);
    }
    unarchive(id, options, callback) {
        return this.client.sendOperationRequest({
            id,
            options
        }, unarchiveOperationSpec, callback);
    }
}
exports.GeocacheLogs = GeocacheLogs;
// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const archiveOperationSpec = {
    httpMethod: "POST",
    path: "Api/GeocacheLogs/Archive",
    requestBody: {
        parameterPath: "id",
        mapper: {
            required: true,
            serializedName: "id",
            type: {
                name: "Number"
            }
        }
    },
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Object"
                }
            }
        },
        204: {},
        401: {},
        default: {}
    },
    serializer
};
const unarchiveOperationSpec = {
    httpMethod: "POST",
    path: "Api/GeocacheLogs/Unarchive",
    requestBody: {
        parameterPath: "id",
        mapper: {
            required: true,
            serializedName: "id",
            type: {
                name: "Number"
            }
        }
    },
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Object"
                }
            }
        },
        204: {},
        401: {},
        default: {}
    },
    serializer
};
//# sourceMappingURL=geocacheLogs.js.map